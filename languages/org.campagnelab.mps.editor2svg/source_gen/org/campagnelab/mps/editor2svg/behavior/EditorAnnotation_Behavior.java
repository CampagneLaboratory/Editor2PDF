package org.campagnelab.mps.editor2svg.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import java.io.File;
import java.io.FileOutputStream;
import com.itextpdf.text.Document;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfTemplate;
import jetbrains.mps.nodeEditor.cells.ParentSettings;
import java.awt.Graphics2D;
import com.itextpdf.awt.PdfGraphics2D;
import org.apache.log4j.Priority;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;

public class EditorAnnotation_Behavior {
  public static void init(SNode thisNode) {
    SLinkOperations.setTarget(thisNode, "outputTo", ListSequence.fromList(SModelOperations.getRootsIncludingImported(SNodeOperations.getModel(thisNode), "org.campagnelab.mps.editor2svg.structure.DefaultOutputDirectory")).first(), false);
    SPropertyOperations.set(thisNode, "outputFormat", "1");
  }

  public static void call_renderNodeEditorToPDF_3568214513158969863(SNode thisNode, SNode annotation, EditorCell editorCell) {
    // jetbrains.mps.nodeEditor.cells.EditorCell 

    editorCell.synchronizeViewWithModel();
    editorCell.relayout();

    try {
      File pdfFile = new File(SPropertyOperations.getString(SLinkOperations.getTarget(annotation, "outputTo", false), "path") + "/" + SPropertyOperations.getString(annotation, "name") + ".pdf");
      FileOutputStream stream = new FileOutputStream(pdfFile);
      editorCell.relayout();

      int width = editorCell.getWidth() + editorCell.getX();
      int height = editorCell.getHeight() + editorCell.getY();
      Document document = new Document(new Rectangle(editorCell.getWidth(), editorCell.getHeight()));
      document.setMargins(0, 0, 0, 0);
      PdfWriter writer = PdfWriter.getInstance(document, stream);
      document.open();
      PdfContentByte cb = writer.getDirectContent();
      PdfTemplate template = cb.createTemplate(width, height);
      ParentSettings settings = new ParentSettings();
      Graphics2D g2d = new PdfGraphics2D(template, width, height, false);
      // <node> 
      editorCell.paint(g2d, settings);
      g2d.dispose();
      cb.addTemplate(template, -editorCell.getX(), 0);

      document.close();
    } catch (Exception e) {
      if (LOG.isEnabledFor(Priority.ERROR)) {
        LOG.error("Exception", e);
      }
      e.printStackTrace();
    }

  }

  protected static Logger LOG = LogManager.getLogger(EditorAnnotation_Behavior.class);
}
